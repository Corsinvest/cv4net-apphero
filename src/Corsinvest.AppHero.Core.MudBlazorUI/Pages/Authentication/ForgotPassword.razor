@*
 * SPDX-FileCopyrightText: Copyright Corsinvest Srl
 * SPDX-License-Identifier: AGPL-3.0-only
*@
@page "/auth/password/forgot"

@inherits AHComponentBase

@inject IOptionsSnapshot<UIOptions> UIOptions

<PageTitle>@L["Forgot password"]</PageTitle>

    @if (!string.IsNullOrEmpty(UIOptions.Value.LoginBackgroundImage))
{
    <style>
        body {
            background-image: url(@(UIOptions.Value.LoginBackgroundImage));
            background-repeat: no-repeat;
            background-size: cover;
        }
    </style>
}

<MudText Typo="Typo.subtitle2">
    @L["Enter the email address linked to your account and you will receive an email containing a link to reset your password."]
</MudText>

<EditForm Model="@Model" OnValidSubmit="OnValidForgotPasswordAsync">
    <DataAnnotationsValidator />
    <MudText>
        @L["return to"]
        <MudLink Href="/auth/user/signin">
            @L["Sign In"]
        </MudLink>
    </MudText>

    <MudTextField T="string"
                  @bind-Value="Model.Email" For="@(() => Model.Email)"
                  Label="@L["Email"]"
                  Variant="Variant.Outlined"
                  Required="true"
                  RequiredError="@L["Email is required!"]"
                  Class="my-6"></MudTextField>

    <MudButton Variant="Variant.Filled"
               Color="Color.Primary"
               Size="Size.Large"
               ButtonType="ButtonType.Submit"
               Disabled="ShowWait"
               FullWidth>
        @if (ShowWait)
        {
            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
            <MudText Class="ms-2"> @L["Waiting"]</MudText>
        }
        else
        {
            <MudText>@L["Reset Password"]</MudText>
        }
    </MudButton>
</EditForm>