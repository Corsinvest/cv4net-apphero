@*
 * SPDX-FileCopyrightText: Copyright Corsinvest Srl
 * SPDX-License-Identifier: AGPL-3.0-only
*@
@using Corsinvest.AppHero.Core.BaseUI.Pages.Security;
@using Permissions = Core.Security.Module.Permissions.Role;

@inherits RolesBase

<AHDataGrid T="ApplicationRole"
            Permissions="Permissions.Data"
            FixedHeader
            FixedFooter
            DataGridManager="DataGridManager"
            Filterable
            MultiSelection
            Groupable
            ShowFilterIcons="false"
            Height="calc(100vh - 245px)">
    <ToolBarContent>
        <AHDataGridToolBarCrud T="ApplicationRole" DataGridManager="DataGridManager" />
    </ToolBarContent>

    <Columns>
        <SelectColumn T="ApplicationRole" ShowInFooter="false" />

        <AHPropertyColumn T="ApplicationRole" TProperty="string" Property="a => a.Name" />
        <AHPropertyColumn T="ApplicationRole" TProperty="string" Property="a => a.Description" />

        <TemplateColumn T="ApplicationRole" CellClass="justify-end">
            <CellTemplate>
                <MudButtonGroup Variant="Variant.Text">
                    <AHDataGridColumnEdit T="ApplicationRole" DataGridManager="DataGridManager" Context="@context" />

                    <AHPermissionButtonIcon Permission="Permissions.ManagePermissions" OnClick="@(() => ShowPermissionsManager(context.Item))" />

                    @if (!CanManagePermissions)
                    {
                        <AHPermissionButtonIcon Permission="Permissions.ViewPermissions" OnClick="@(() => ShowPermissionsManager(context.Item))" />
                    }
                </MudButtonGroup>
            </CellTemplate>
        </TemplateColumn>
    </Columns>

    <EditTemplate>
        <MudGrid>
            <MudItem md="12">
                <MudTextField @bind-Value="@context.Name" Label="@(L[DataGridManager.GetDescriptionProperty(a => a.Name!)])" For="@(() => context.Name)" />
            </MudItem>

            <MudItem md="12">
                <MudTextField @bind-Value="@context.Description" Label="@(L[DataGridManager.GetDescriptionProperty(a => a.Description)])"
                              For="@(() => context.Description)" />
            </MudItem>
        </MudGrid>
    </EditTemplate>

    <NoRecordsContent>
        <AHNoRecordsContent />
    </NoRecordsContent>

    <LoadingContent>
        <AHLoadingContent />
    </LoadingContent>

    <PagerContent>
        <MudDataGridPager T="ApplicationRole" />
    </PagerContent>
</AHDataGrid>

<MudDialog IsVisible="ShowPermissionsDialog"
           Style="width:80%;"
           Options="new DialogOptions { CloseButton = false, CloseOnEscapeKey = false, DisableBackdropClick=true, MaxWidth = MaxWidth.Large }">
    <TitleContent>
        <div class="d-flex gap-2">
            <MudIcon Icon="@Icons.Material.Filled.Edit" />
            <MudText>@L["Permission edit"]</MudText>
        </div>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="max-height: 500px; overflow-y: scroll">
            <RolePermissions Permissions="@CurrentPermissions"
                             CanManagePermissions="@CanManagePermissions"
                             PermissionGranted="@PermissionGrantedAsync"
                             PermissionDenied="@PermissionDeniedAsync" />
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" OnClick="@(() => ShowPermissionsDialog = false)" Color="Color.Primary">@L["Close"]</MudButton>
    </DialogActions>
</MudDialog>